<template>

	<view class="container" v-if="!loading">
		<view class="container" scroll-y="true">
			<!-- 		<refresh @refresh="onrefresh" name="leaseFresh">
			</refresh> -->
			<!-- 			<uni-fab ref="fab" :pattern="pattern" :content="content" :horizontal="horizontal" :vertical="vertical"
				:direction="direction" @trigger="trigger" @fabClick="fabClick" />
		 -->
			<view class="uni-panel">
				<uni-card title="大盘数据" :isFull="true" :extra=upDateTime>
					<!-- 				<image class="uni-header-image" :src="item.iconUrl"></image> -->
					<uni-row class="demo-uni-row">
						<uni-col :span="14">
							<view class="example-body">

								<text class="AA-money">总底价: ¥{{this.totalPrice}} </text>
								<text class="rental-trend">总在售量 {{this.totalSellCount}} </text>
							</view>

						</uni-col>
						<!-- <uni-col :span="16" :offset="6">
							<view class="example-body">
								<uni-tooltip class="AA-money-change"
									:content="(100)"
									v-if="100>0">价格变动:
									📈{{(100 *100).toFixed(3)}} %</uni-tooltip>
								<uni-tooltip class="AA-money-change-down"
									:content="100" v-else>价格变动:
									📉{{(100).toFixed(3)}} %
								</uni-tooltip>
							</view>
						</uni-col> -->
					</uni-row>
				</uni-card>
			</view>
			<view class="charts-box">
				<qiun-data-charts type="rose" :opts="opts" :chartData="chartData" />
			</view>

		</view>

	</view>
	<loading v-else></loading>


</template>
<script>
	import loading from '../../../components/loading/loading.vue'
	export default {
		components: {
			loading
		},
		data() {
			return {
				loading: true,
				chartData: {},
				opts: {
					color: ["#1890FF", "#91CB74", "#FAC858", "#EE6666", "#73C0DE", "#3CA272", "#FC8452", "#9A60B4",
						"#ea7ccc"
					],
					padding: [5, 5, 5, 5],
					enableScroll: false,
					legend: {
						show: true,
						position: "left",
						lineHeight: 25
					},
					extra: {
						rose: {
							type: "radius",
							minRadius: 50,
							activeOpacity: 0.5,
							activeRadius: 10,
							offsetAngle: 0,
							labelWidth: 15,
							border: true,
							borderWidth: 2,
							borderColor: "#FFFFFF",
							linearType: "custom"
						}
					}
				},
				marketData: [],
				totalPrice: 0.0,
				totalSellCount: 0,
				upDateTime: '',
			};
		},
		onLoad() {
			this.initData();
		},
		onReady() {
			this.getServerData();
		},
		methods: {
			initData() {

				setTimeout(() => {
					uni.request({
						url: 'https://www.fastmock.site/mock/d52e60b6a14228ac1afac5b2899e2760/v1/marketData', //仅为示例，并非真实接口地址。
						data: {
							text: 'uni.request'
						},
						header: {
							'USER_AGENT': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/73.0.3683.86 Chrome/73.0.3683.86 Safari/537.36' //自定义请求头信息
						},
						success: (res) => {
							console.log(res.data);
							this.loading = false;
							this.marketData = res.data.marketData;
							this.totalPrice = this.marketData[6].total.totalPrice / 100.0;
							this.totalSellCount = this.marketData[6].total.totalSellCount;
							this.upDateTime = this.marketData[6].createTime;
						}
					});
					uni.stopPullDownRefresh();
				}, 300);
			},
			getServerData() {
				//模拟从服务器获取数据时的延时
				setTimeout(() => {
					//模拟服务器返回数据，如果数据格式和标准格式不同，需自行按下面的格式拼接
					let res = {
						series: [{
							data: [{
								"name": "一班",
								"value": 50
							}, {
								"name": "二班",
								"value": 30
							}, {
								"name": "三班",
								"value": 20
							}, {
								"name": "四班",
								"value": 18
							}, {
								"name": "五班",
								"value": 8
							}]
						}]
					};
					this.chartData = JSON.parse(JSON.stringify(res));
				}, 500);
			},
		}
	};
</script>

<style>
	@import '../../../common/uni-nvue.css';
</style>
<style scoped>
	.main {
		top: 0;
		width: 100%;
	}

	.head_box {
		width: 700upx;
		height: 220upx;
		background-color: #ffffff;
		border-radius: 15upx;
	}

	.btn-box {
		width: 310upx;
		height: 150upx;
		border-radius: 20upx;
	}

	.scroll {
		height: 700rpx;
	}

	.charts-box {
		width: 100%;
		height: 300px;
	}
</style>
